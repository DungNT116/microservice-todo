name: Docker Compose CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v4

    - name: Set up Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: Build and start services
      run: docker-compose up --build -d

    - name: Install dependencies (jq & tmux)
      run: sudo apt update && sudo apt install -y jq tmux

    - name: Install and Configure ngrok
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      run: |
        curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
        echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
        sudo apt update && sudo apt install ngrok

        # Authenticate ngrok
        ngrok config add-authtoken "$NGROK_AUTH_TOKEN"

    - name: Start ngrok Tunnel (Prevent Termination)
      env:
        NGROK_REGION: us  # Change this if needed
      run: |
        # Start a detached tmux session for ngrok
        tmux new-session -d -s ngrok_session "ngrok http 80 --region=$NGROK_REGION"
        sleep 10  # Allow time for ngrok to start

    - name: Get ngrok Public URL
      run: |
        # Extract the public URL from ngrok
        NGROK_URL=$(curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url')

        if [ -z "$NGROK_URL" ] || [ "$NGROK_URL" == "null" ]; then
          echo "ngrok failed to start. Exiting..."
          exit 1
        fi

        echo "âœ… Application is available at: $NGROK_URL"
        echo "DEPLOYED_URL=$NGROK_URL" >> $GITHUB_ENV

    - name: Show Running Containers
      run: docker ps -a

    - name: Show Logs (for debugging)
      run: docker-compose logs
